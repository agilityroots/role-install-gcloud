---
- name: Insure temp path exists
  file:
    path: "{{ gcloud_tmp_path }}"
    state: directory

- block:

  - name: Download the archive
    get_url:
      url: "{{ gcloud_archive_url }}/{{ gcloud_archive_name }}"
      dest: "{{ gcloud_tmp_path }}/{{ gcloud_archive_name }}"
      force: "{{ gcloud_force_download }}"

  - name: Remove existing google-cloud-sdk dir, it if exists
    file:
        path: "{{ gcloud_install_path }}/google-cloud-sdk"
        state: absent

  - set_fact:
      archive_path: "{{ gcloud_tmp_path + '/' +  gcloud_archive_name }}"

  - name: Unarchive
    shell: cd "{{ gcloud_install_path }}" && tar xvzf "{{ archive_path }}"

  when: not (gcloud_archive_name == '')

- block:
  - name: Copy the archive from the Ansible controller
    copy:
      src: "{{ gcloud_archive_path }}"
      dest: "{{ gcloud_tmp_path }}"
  - set_fact:
      archive_path: "{{ gcloud_tmp_path + '/' + gcloud_archive_path | basename }}"
  when: not (gcloud_archive_path == '')

- name: Build run script
  template:
    src: "{{ role_path }}/templates/run.j2"
    dest: "{{ gcloud_tmp_path }}/run_install.sh"
    mode: 0755
  tags:
    - copy
    - download

- name: Install
  command: "{{ gcloud_tmp_path }}/run_install.sh"
  creates: "{{gcloud_install_path}}/bin/gcloud"

- name: Remove the archive
  file:
    path: "{{ archive_path }}"
    state: absent

- name: Remove the script
  file:
    path: "{{ gcloud_tmp_path }}/run_install.sh"
    state: absent
  when: not gcloud_debug
